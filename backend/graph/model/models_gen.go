// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

type AdsAccount struct {
	ID                string              `json:"id"`
	AdsAccountName    string              `json:"ads_account_name"`
	AccountType       string              `json:"account_type"`
	User              *User               `json:"user"`
	Business          *Business           `json:"business"`
	ApproverMode      bool                `json:"approver_mode"`
	CreatedAt         string              `json:"created_at"`
	UpdatedAt         string              `json:"updated_at"`
	WalletAdID        string              `json:"wallet_ad_id"`
	AdsAccountMembers []*AdsAccountMember `json:"ads_account_members"`
}

type AdsAccountInvitation struct {
	ID                  string `json:"id"`
	AdsAccountID        int    `json:"ads_account_id"`
	Role                string `json:"role"`
	AdsInvitationStatus string `json:"ads_invitation_status"`
	UserInviterID       int    `json:"user_inviter_id"`
	UserInvitedID       int    `json:"user_invited_id"`
	CreatedAt           string `json:"created_at"`
	UpdatedAt           string `json:"updated_at"`
}

type AdsAccountMember struct {
	ID         string `json:"id"`
	Role       string `json:"role"`
	IsApprover bool   `json:"is_approver"`
	IsMe       *bool  `json:"is_me"`
	User       *User  `json:"user"`
	CreatedAt  string `json:"created_at"`
	UpdatedAt  string `json:"updated_at"`
}

type AdsAccountReceivingDiscount struct {
	PlacementAdsAccountDsicount string `json:"placementAdsAccountDsicount"`
	AdsAccountID                string `json:"adsAccountId"`
	AdsPlacementID              string `json:"adsPlacementId"`
}

type AdsContent struct {
	ID                string              `json:"id"`
	AdsAccountID      int                 `json:"ads_account_id"`
	AdsContentName    string              `json:"ads_content_name"`
	CreatedAt         string              `json:"created_at"`
	UpdatedAt         string              `json:"updated_at"`
	PlacementContents []*PlacementContent `json:"placement_contents"`
	Campaigns         []*Campaign         `json:"campaigns"`
}

type AdsContentsFilter struct {
	AdsAccountID *int         `json:"ads_account_id"`
	RangeFilter  *RangeFilter `json:"range_filter"`
}

type AdsPlacement struct {
	ID                             string              `json:"id"`
	AdsPlacementName               string              `json:"ads_placement_name"`
	BaseDurationCost               float64             `json:"base_duration_cost"`
	BaseViewCost                   float64             `json:"base_view_cost"`
	ViewCostIncrement              float64             `json:"view_cost_increment"`
	BaseClickCost                  float64             `json:"base_click_cost"`
	ClickCostIncrement             float64             `json:"click_cost_increment"`
	BaseConversionCost             float64             `json:"base_conversion_cost"`
	ConversionCostIncrement        float64             `json:"conversion_cost_increment"`
	DiscountPercentage             float64             `json:"discount_percentage"`
	IsDiscountAll                  bool                `json:"is_discount_all"`
	Description                    string              `json:"description"`
	IsActive                       bool                `json:"is_active"`
	ContentProperties              []*ContentProperty  `json:"content_properties"`
	HTMLView                       string              `json:"html_view"`
	SpecialFilterProperties        []*SpecialProperty  `json:"special_filter_properties"`
	IsRestricted                   bool                `json:"is_restricted"`
	RestrictedType                 *string             `json:"restricted_type"`
	IsClicked                      bool                `json:"is_clicked"`
	IsConversion                   bool                `json:"is_conversion"`
	CreatedAt                      string              `json:"created_at"`
	UpdatedAt                      string              `json:"updated_at"`
	AdsAccountReceivingDiscounts   []*SimpleAdsAccount `json:"ads_account_receiving_discounts"`
	AdsAccountRestrictedPlacements []*SimpleAdsAccount `json:"ads_account_restricted_placements"`
}

type Audience struct {
	ID           string      `json:"id"`
	AdsAccountID int         `json:"ads_account_id"`
	Address      *string     `json:"address"`
	AudienceName string      `json:"audience_name"`
	Age          *string     `json:"age"`
	CreatedAt    string      `json:"created_at"`
	UpdatedAt    string      `json:"updated_at"`
	Gender       *string     `json:"gender"`
	Interest     *string     `json:"interest"`
	Locations    *string     `json:"locations"`
	Campaigns    []*Campaign `json:"campaigns"`
}

type AudienceFilter struct {
	AdsAccountID *int         `json:"ads_account_id"`
	RangeFilter  *RangeFilter `json:"range_filter"`
}

type Business struct {
	ID    string `json:"id"`
	Name  string `json:"name"`
	Owner int    `json:"owner"`
}

type Campaign struct {
	ID                string               `json:"id"`
	AdsAccountID      int                  `json:"ads_account_id"`
	AudienceID        *int                 `json:"audience_id"`
	AdsContentID      *int                 `json:"ads_content_id"`
	CampaignName      string               `json:"campaign_name"`
	CampaignObjective *string              `json:"campaign_objective"`
	Description       *string              `json:"description"`
	EndDate           *string              `json:"end_date"`
	BudgetLimit       *float64             `json:"budget_limit"`
	CampaignStatus    string               `json:"campaign_status"`
	CreatedAt         string               `json:"created_at"`
	UpdatedAt         string               `json:"updated_at"`
	Audience          *Audience            `json:"audience"`
	AdsContent        *AdsContent          `json:"ads_content"`
	CampaignHistories []*CampaignHistories `json:"campaign_histories"`
}

type CampaignHistories struct {
	ID             string `json:"id"`
	Reason         string `json:"reason"`
	RecordedStatus string `json:"recorded_status"`
	User           *User  `json:"user"`
	UserIDActor    int    `json:"user_id_actor"`
	UserType       string `json:"user_type"`
	CreatedAt      string `json:"created_at"`
	UpdatedAt      string `json:"updated_at"`
}

type CampaignsFilter struct {
	AdsAccountID   *int         `json:"ads_account_id"`
	CampaignStatus *string      `json:"campaign_status"`
	RangeFilter    *RangeFilter `json:"range_filter"`
}

type ContentProperty struct {
	Key          string  `json:"key"`
	Type         string  `json:"type"`
	ExampleValue string  `json:"example_value"`
	URLSource    *string `json:"url_source"`
	JSONKeyID    *string `json:"json_key_id"`
	JSONKeyLabel *string `json:"json_key_label"`
}

type CreateAdsAccount struct {
	AdsAccountID   string      `json:"adsAccountId"`
	AdsAccountName string      `json:"adsAccountName"`
	AdsAccountType AccountType `json:"adsAccountType"`
	WalletAdsID    int         `json:"walletAdsId"`
	UserID         int         `json:"userId"`
	BusinessID     int         `json:"businessId"`
	CreatedAt      string      `json:"createdAt"`
}

type CreateAdsWalletAccount struct {
	WalletAdsID string  `json:"walletAdsId"`
	Balance     float64 `json:"balance"`
	CreatedAt   string  `json:"createdAt"`
}

type DataAdsBalance struct {
	ID              string             `json:"id"`
	AdsAccountID    string             `json:"ads_account_id"`
	CurrentBalance  float64            `json:"current_balance"`
	HistorySpending []*HistorySpending `json:"history_spending"`
	HistoryTopup    []*HistoryTopup    `json:"history_topup"`
}

type DataAdsCampaign struct {
	Campaign *Campaign   `json:"campaign"`
	Audience *Audience   `json:"audience"`
	Content  *AdsContent `json:"content"`
}

type DeletedAdsContent struct {
	Result     string      `json:"result"`
	AdsContent *AdsContent `json:"ads_content"`
}

type DeletedAudience struct {
	Result   string    `json:"result"`
	Audience *Audience `json:"audience"`
}

type DeletedCampaign struct {
	Result   string    `json:"result"`
	Campaign *Campaign `json:"campaign"`
}

type DeletedPlacementContent struct {
	Result           string            `json:"result"`
	PlacementContent *PlacementContent `json:"placement_content"`
}

type EditPropertiesAdsPlacement struct {
	BaseDurationCost           int    `json:"baseDurationCost"`
	AdsPlacementName           string `json:"adsPlacementName"`
	BaseViewCost               int    `json:"baseViewCost"`
	ViewCostIncremental        int    `json:"viewCostIncremental"`
	BaseClickCost              int    `json:"baseClickCost"`
	ClickCostIncrement         int    `json:"clickCostIncrement"`
	BaseTransactionCost        int    `json:"baseTransactionCost"`
	IncrementalTransactionCost int    `json:"incrementalTransactionCost"`
	DiscountCost               int    `json:"discountCost"`
}

type EventCampaignPublished struct {
	ID     string `json:"id"`
	Reason string `json:"reason"`
	Action string `json:"action"`
}

type EventCampaignReview struct {
	ID     string `json:"id"`
	Reason string `json:"reason"`
	Action string `json:"action"`
}

type HistorySpending struct {
	ID                string  `json:"id"`
	WalletAdID        string  `json:"wallet_ad_id"`
	Amount            float64 `json:"amount"`
	CreatedAt         string  `json:"created_at"`
	UpdatedAt         string  `json:"updated_at"`
	CampaignID        string  `json:"campaign_id"`
	CampaignName      string  `json:"campaign_name"`
	CampaignObjective string  `json:"campaign_objective"`
}

type HistoryTopup struct {
	ID              string  `json:"id"`
	WalletAdID      string  `json:"wallet_ad_id"`
	Amount          float64 `json:"amount"`
	AdminFee        float64 `json:"admin_fee"`
	UserID          string  `json:"user_id"`
	TopupMethodID   int     `json:"topup_method_id"`
	TopupMethodName string  `json:"topup_method_name"`
	ExpiredAt       string  `json:"expired_at"`
	CreatedAt       string  `json:"created_at"`
	UpdatedAt       string  `json:"updated_at"`
	IsSuccess       bool    `json:"is_success"`
}

type InputAdsContent struct {
	AdsAccountID      int                      `json:"ads_account_id"`
	AdsContentName    string                   `json:"ads_content_name"`
	PlacementContents []*InputPlacementContent `json:"placement_contents"`
}

type InputAdsPlacement struct {
	AdsPlacementName               string                  `json:"ads_placement_name"`
	BaseDurationCost               float64                 `json:"base_duration_cost"`
	BaseViewCost                   float64                 `json:"base_view_cost"`
	ViewCostIncrement              float64                 `json:"view_cost_increment"`
	BaseClickCost                  float64                 `json:"base_click_cost"`
	ClickCostIncrement             float64                 `json:"click_cost_increment"`
	BaseConversionCost             float64                 `json:"base_conversion_cost"`
	ConversionCostIncrement        float64                 `json:"conversion_cost_increment"`
	DiscountPercentage             float64                 `json:"discount_percentage"`
	IsDiscountAll                  bool                    `json:"is_discount_all"`
	Description                    string                  `json:"description"`
	IsActive                       bool                    `json:"is_active"`
	ContentProperties              []*InputContentProperty `json:"content_properties"`
	HTMLView                       string                  `json:"html_view"`
	SpecialFilterProperties        []*InputSpecialProperty `json:"special_filter_properties"`
	IsRestricted                   bool                    `json:"is_restricted"`
	RestrictedType                 *string                 `json:"restricted_type"`
	IsClicked                      bool                    `json:"is_clicked"`
	IsConversion                   bool                    `json:"is_conversion"`
	AdsAccountReceivingDiscounts   []*InputID              `json:"ads_account_receiving_discounts"`
	AdsAccountRestrictedPlacements []*InputID              `json:"ads_account_restricted_placements"`
}

type InputAudience struct {
	AdsAccountID int     `json:"ads_account_id"`
	AudienceName string  `json:"audience_name"`
	Address      *string `json:"address"`
	Age          *string `json:"age"`
	Gender       *string `json:"gender"`
	Interest     *string `json:"interest"`
	Locations    *string `json:"locations"`
}

type InputCampaign struct {
	AdsAccountID      int      `json:"ads_account_id"`
	AudienceID        *int     `json:"audience_id"`
	AdsContentID      *int     `json:"ads_content_id"`
	CampaignName      string   `json:"campaign_name"`
	CampaignObjective *string  `json:"campaign_objective"`
	Description       *string  `json:"description"`
	EndDate           *string  `json:"end_date"`
	BudgetLimit       *float64 `json:"budget_limit"`
}

type InputCancelInvitation struct {
	AdsInvitationID int `json:"adsInvitationId"`
}

type InputContentProperty struct {
	Key          string  `json:"key"`
	Type         string  `json:"type"`
	ExampleValue string  `json:"example_value"`
	URLSource    *string `json:"url_source"`
	JSONKeyID    *string `json:"json_key_id"`
	JSONKeyLabel *string `json:"json_key_label"`
}

type InputEditAdsAccountName struct {
	AdsAccountID   string `json:"adsAccountId"`
	AdsAccountName string `json:"adsAccountName"`
}

type InputEditAdsPlacement struct {
	ID                             string                  `json:"id"`
	AdsPlacementName               string                  `json:"ads_placement_name"`
	BaseDurationCost               float64                 `json:"base_duration_cost"`
	BaseViewCost                   float64                 `json:"base_view_cost"`
	ViewCostIncrement              float64                 `json:"view_cost_increment"`
	BaseClickCost                  float64                 `json:"base_click_cost"`
	ClickCostIncrement             float64                 `json:"click_cost_increment"`
	BaseConversionCost             float64                 `json:"base_conversion_cost"`
	ConversionCostIncrement        float64                 `json:"conversion_cost_increment"`
	DiscountPercentage             float64                 `json:"discount_percentage"`
	IsDiscountAll                  bool                    `json:"is_discount_all"`
	Description                    string                  `json:"description"`
	IsActive                       bool                    `json:"is_active"`
	ContentProperties              []*InputContentProperty `json:"content_properties"`
	HTMLView                       string                  `json:"html_view"`
	SpecialFilterProperties        []*InputSpecialProperty `json:"special_filter_properties"`
	IsRestricted                   bool                    `json:"is_restricted"`
	RestrictedType                 *string                 `json:"restricted_type"`
	IsClicked                      bool                    `json:"is_clicked"`
	IsConversion                   bool                    `json:"is_conversion"`
	AdsAccountReceivingDiscounts   []*InputID              `json:"ads_account_receiving_discounts"`
	AdsAccountRestrictedPlacements []*InputID              `json:"ads_account_restricted_placements"`
}

type InputEditUserRole struct {
	AdsAccountID int    `json:"adsAccountId"`
	UserID       int    `json:"userId"`
	UserRole     string `json:"userRole"`
}

type InputID struct {
	ID string `json:"id"`
}

type InputInviteMember struct {
	UserIDInvited int    `json:"userIdInvited"`
	Role          string `json:"role"`
	AdsAccountID  int    `json:"adsAccountId"`
}

type InputLeaveAdsAccount struct {
	AdsAccountID int `json:"adsAccountId"`
}

type InputPlacementContent struct {
	AdsPlacementID    int      `json:"ads_placement_id"`
	Content           *string  `json:"content"`
	SpecialFilter     *string  `json:"special_filter"`
	CostDurationBid   *float64 `json:"cost_duration_bid"`
	CostViewBid       *float64 `json:"cost_view_bid"`
	CostClickBid      *float64 `json:"cost_click_bid"`
	CostConversionBid *float64 `json:"cost_conversion_bid"`
}

type InputPlacementContentDirect struct {
	AdsPlacementID    int      `json:"ads_placement_id"`
	AdsContentID      int      `json:"ads_content_id"`
	Content           *string  `json:"content"`
	SpecialFilter     *string  `json:"special_filter"`
	CostDurationBid   *float64 `json:"cost_duration_bid"`
	CostViewBid       *float64 `json:"cost_view_bid"`
	CostClickBid      *float64 `json:"cost_click_bid"`
	CostConversionBid *float64 `json:"cost_conversion_bid"`
}

type InputQueryAdsBalance struct {
	AdsAccountID string  `json:"ads_account_id"`
	StartDate    *string `json:"start_date"`
	EndDate      *string `json:"end_date"`
}

type InputRespondInvitation struct {
	AdsInvitationID int  `json:"adsInvitationId"`
	IsApprove       bool `json:"isApprove"`
}

type InputSelectApprover struct {
	AdsMemberID string `json:"adsMemberId"`
	IsDisable   *bool  `json:"isDisable"`
}

type InputSpecialProperty struct {
	QueryParam   string  `json:"query_param"`
	Type         string  `json:"type"`
	URLSource    *string `json:"url_source"`
	JSONKeyID    *string `json:"json_key_id"`
	JSONKeyLabel *string `json:"json_key_label"`
}

type InputToggleAdsPlacement struct {
	ID       string `json:"id"`
	IsActive bool   `json:"is_active"`
}

type InputTopup struct {
	Amount          float64 `json:"amount"`
	PaymentMethodID int     `json:"payment_method_id"`
	WalletAdID      string  `json:"wallet_ad_id"`
	PhoneNumber     *string `json:"phone_number"`
}

type InputUpdateAdsContent struct {
	ID             string  `json:"id"`
	AdsContentName *string `json:"ads_content_name"`
}

type InputUpdateAudience struct {
	ID           string  `json:"id"`
	AudienceName *string `json:"audience_name"`
	Address      *string `json:"address"`
	Age          *string `json:"age"`
	Gender       *string `json:"gender"`
	Interest     *string `json:"interest"`
	Locations    *string `json:"locations"`
}

type InputUpdateCampaign struct {
	ID                string  `json:"id"`
	AudienceID        *int    `json:"audience_id"`
	AdsContentID      *int    `json:"ads_content_id"`
	CampaignName      string  `json:"campaign_name"`
	CampaignObjective string  `json:"campaign_objective"`
	CampaignStatus    string  `json:"campaign_status"`
	Description       string  `json:"description"`
	EndDate           *string `json:"end_date"`
	BudgetLimit       float64 `json:"budget_limit"`
}

type InputUpdatePlacementContent struct {
	ID                string   `json:"id"`
	Content           *string  `json:"content"`
	SpecialFilter     *string  `json:"special_filter"`
	CostDurationBid   *float64 `json:"cost_duration_bid"`
	CostViewBid       *float64 `json:"cost_view_bid"`
	CostClickBid      *float64 `json:"cost_click_bid"`
	CostConversionBid *float64 `json:"cost_conversion_bid"`
}

type MyAccountInvitation struct {
	ID                  string            `json:"id"`
	AdsAccount          *NestedAdsAccount `json:"ads_account"`
	Role                string            `json:"role"`
	AdsInvitationStatus string            `json:"ads_invitation_status"`
	UserInviter         *User             `json:"user_inviter"`
	CreatedAt           string            `json:"created_at"`
	UpdatedAt           string            `json:"updated_at"`
}

type MyAccountRequest struct {
	ID                  string            `json:"id"`
	AdsAccount          *NestedAdsAccount `json:"ads_account"`
	Role                string            `json:"role"`
	AdsInvitationStatus string            `json:"ads_invitation_status"`
	UserInvited         *User             `json:"user_invited"`
	CreatedAt           string            `json:"created_at"`
	UpdatedAt           string            `json:"updated_at"`
}

type NestedAdsAccount struct {
	ID             string `json:"id"`
	AdsAccountName string `json:"ads_account_name"`
	AccountType    string `json:"account_type"`
	CreatedAt      string `json:"created_at"`
	UpdatedAt      string `json:"updated_at"`
}

type PaymentDetail struct {
	PartnerTransactionID string         `json:"partner_transaction_id"`
	UserID               string         `json:"user_id"`
	Payment              int            `json:"payment"`
	OrderID              string         `json:"order_id"`
	ExternalID           string         `json:"external_id"`
	Price                float64        `json:"price"`
	PriceRaw             float64        `json:"price_raw"`
	PriceAdmin           float64        `json:"price_admin"`
	Status               int            `json:"status"`
	Phone                string         `json:"Phone"`
	AccountName          string         `json:"account_name"`
	VaNumber             string         `json:"va_number"`
	DesktopURL           string         `json:"desktop_url"`
	MobileURL            string         `json:"mobile_url"`
	DeepLink             string         `json:"deep_link"`
	QRCode               string         `json:"qr_code"`
	PaymentCode          string         `json:"payment_code"`
	ExpiredAt            string         `json:"expired_at"`
	CreatedAt            string         `json:"created_at"`
	UpdatedAt            string         `json:"updated_at"`
	PaymentMethod        *PaymentMethod `json:"payment_method"`
}

type PaymentMethod struct {
	ID              int     `json:"id"`
	Name            string  `json:"name"`
	Logo            string  `json:"logo"`
	Status          int     `json:"status"`
	Type            int     `json:"type"`
	ExpirationTime  int     `json:"expiration_time"`
	AdminFeeFixed   float64 `json:"admin_fee_fixed"`
	AdminFeePercent float64 `json:"admin_fee_percent"`
	MinPrice        float64 `json:"min_price"`
	MaxPrice        float64 `json:"max_price"`
}

type PlacementContent struct {
	ID                string        `json:"id"`
	Content           *string       `json:"content"`
	SpecialFilter     *string       `json:"special_filter"`
	CostDurationBid   *float64      `json:"cost_duration_bid"`
	CostViewBid       *float64      `json:"cost_view_bid"`
	CostClickBid      *float64      `json:"cost_click_bid"`
	CostConversionBid *float64      `json:"cost_conversion_bid"`
	AdsPlacementID    int           `json:"ads_placement_id"`
	AdsContentID      int           `json:"ads_content_id"`
	AdsPlacement      *AdsPlacement `json:"ads_placement"`
	AdsContent        *AdsContent   `json:"ads_content"`
	CreatedAt         string        `json:"created_at"`
	UpdatedAt         string        `json:"updated_at"`
}

type RangeFilter struct {
	StartDate *string `json:"start_date"`
	EndDate   *string `json:"end_date"`
}

type RemoveUserFromAdsAccount struct {
	AdsAccountID string `json:"adsAccountId"`
	UserID       int    `json:"userId"`
}

type ResponseAdsAudience struct {
	AudienceName       string    `json:"AudienceName"`
	Location           string    `json:"Location"`
	Gender             string    `json:"Gender"`
	Age                string    `json:"Age"`
	Interest           string    `json:"Interest"`
	Published          int       `json:"Published"`
	Live               int       `json:"Live"`
	Draft              int       `json:"Draft"`
	AudienceProperties *Audience `json:"AudienceProperties"`
	LatestUpdate       string    `json:"LatestUpdate"`
}

type ResponseAdsCampaign struct {
	NameCampaign       string           `json:"NameCampaign"`
	StatusCampaign     string           `json:"StatusCampaign"`
	Objective          string           `json:"Objective"`
	AudienceName       string           `json:"AudienceName"`
	ContentName        string           `json:"ContentName"`
	Description        string           `json:"Description"`
	LatestUpdate       string           `json:"LatestUpdate"`
	CampaingProperties *Campaign        `json:"CampaingProperties"`
	AudienceProperties *Audience        `json:"AudienceProperties"`
	ContentProperties  *ContentProperty `json:"ContentProperties"`
	RejectionHistory   string           `json:"RejectionHistory"`
}

type ResponseAdsContent struct {
	ContentName          string          `json:"ContentName"`
	Placements           []*AdsPlacement `json:"Placements"`
	Published            int             `json:"Published"`
	Live                 int             `json:"Live"`
	Draft                int             `json:"Draft"`
	AdsContentProperties *AdsContent     `json:"AdsContentProperties"`
	LastUpdated          string          `json:"LastUpdated"`
}

type ResponseAdsListAccount struct {
	AdsAccountID   string `json:"adsAccountId"`
	AdsAccountName string `json:"adsAccountName"`
}

type ResponseCancelInvitation struct {
	AdsInvitationID  int    `json:"adsInvitationId"`
	UserIDInviter    int    `json:"userIdInviter"`
	UserNameInviter  string `json:"userNameInviter"`
	UserIDInvited    int    `json:"userIdInvited"`
	UserNameInvited  string `json:"userNameInvited"`
	UserRoleInvited  string `json:"userRoleInvited"`
	AdsAccountID     int    `json:"adsAccountId"`
	AdsAccountName   string `json:"adsAccountName"`
	InvitationStatus string `json:"invitationStatus"`
	TimestampCreated string `json:"timestampCreated"`
	TimestampUpdated string `json:"timestampUpdated"`
}

type ResponseEventCampaign struct {
	Result   string    `json:"result"`
	Campaign *Campaign `json:"campaign"`
}

type ResponseRespondInvitation struct {
	UpdatedInvitation *AdsAccountInvitation `json:"updatedInvitation"`
	NewAdsAccount     *AdsAccount           `json:"newAdsAccount"`
}

type ResponseSubcribe struct {
	Event      string              `json:"event"`
	Properties []*PropertiesUpdate `json:"properties"`
}

type ResponseToggleAdsPacement struct {
	ID       string `json:"id"`
	IsActive bool   `json:"is_active"`
}

type SimpleAdsAccount struct {
	ID             string `json:"id"`
	AdsAccountName string `json:"ads_account_name"`
	AccountType    string `json:"account_type"`
}

type SpecialProperty struct {
	QueryParam   string  `json:"query_param"`
	Type         string  `json:"type"`
	URLSource    *string `json:"url_source"`
	JSONKeyID    *string `json:"json_key_id"`
	JSONKeyLabel *string `json:"json_key_label"`
}

type User struct {
	ID             string  `json:"id"`
	Fullname       string  `json:"fullname"`
	Username       string  `json:"username"`
	ProfilePicture *string `json:"profile_picture"`
}

type WalletAds struct {
	WalletAdsID string  `json:"walletAdsId"`
	Balance     float64 `json:"balance"`
	CreatedAt   string  `json:"createdAt"`
	UpdatedAt   string  `json:"updatedAt"`
}

type PropertiesUpdate struct {
	NamePropertie  string `json:"namePropertie"`
	ValuePropertie string `json:"valuePropertie"`
}

type AccountType string

const (
	AccountTypeBusiness AccountType = "BUSINESS"
	AccountTypePersonal AccountType = "PERSONAL"
)

var AllAccountType = []AccountType{
	AccountTypeBusiness,
	AccountTypePersonal,
}

func (e AccountType) IsValid() bool {
	switch e {
	case AccountTypeBusiness, AccountTypePersonal:
		return true
	}
	return false
}

func (e AccountType) String() string {
	return string(e)
}

func (e *AccountType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = AccountType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid AccountType", str)
	}
	return nil
}

func (e AccountType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type CampaignStatusType string

const (
	CampaignStatusTypeDraft            CampaignStatusType = "DRAFT"
	CampaignStatusTypeTeamApproval     CampaignStatusType = "TEAM_APPROVAL"
	CampaignStatusTypeAdminApproval    CampaignStatusType = "ADMIN_APPROVAL"
	CampaignStatusTypeLive             CampaignStatusType = "LIVE"
	CampaignStatusTypeCampaignRejected CampaignStatusType = "CAMPAIGN_REJECTED"
	CampaignStatusTypePublished        CampaignStatusType = "PUBLISHED"
	CampaignStatusTypeTeamPaused       CampaignStatusType = "TEAM_PAUSED"
	CampaignStatusTypeAdminPaused      CampaignStatusType = "ADMIN_PAUSED"
)

var AllCampaignStatusType = []CampaignStatusType{
	CampaignStatusTypeDraft,
	CampaignStatusTypeTeamApproval,
	CampaignStatusTypeAdminApproval,
	CampaignStatusTypeLive,
	CampaignStatusTypeCampaignRejected,
	CampaignStatusTypePublished,
	CampaignStatusTypeTeamPaused,
	CampaignStatusTypeAdminPaused,
}

func (e CampaignStatusType) IsValid() bool {
	switch e {
	case CampaignStatusTypeDraft, CampaignStatusTypeTeamApproval, CampaignStatusTypeAdminApproval, CampaignStatusTypeLive, CampaignStatusTypeCampaignRejected, CampaignStatusTypePublished, CampaignStatusTypeTeamPaused, CampaignStatusTypeAdminPaused:
		return true
	}
	return false
}

func (e CampaignStatusType) String() string {
	return string(e)
}

func (e *CampaignStatusType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = CampaignStatusType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid CampaignStatusType", str)
	}
	return nil
}

func (e CampaignStatusType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type GenderType string

const (
	GenderTypeMale   GenderType = "MALE"
	GenderTypeFemale GenderType = "FEMALE"
)

var AllGenderType = []GenderType{
	GenderTypeMale,
	GenderTypeFemale,
}

func (e GenderType) IsValid() bool {
	switch e {
	case GenderTypeMale, GenderTypeFemale:
		return true
	}
	return false
}

func (e GenderType) String() string {
	return string(e)
}

func (e *GenderType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = GenderType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid GenderType", str)
	}
	return nil
}

func (e GenderType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type RecordedType string

const (
	RecordedTypeRecord       RecordedType = "RECORD"
	RecordedTypeFailedRecord RecordedType = "FAILED_RECORD"
)

var AllRecordedType = []RecordedType{
	RecordedTypeRecord,
	RecordedTypeFailedRecord,
}

func (e RecordedType) IsValid() bool {
	switch e {
	case RecordedTypeRecord, RecordedTypeFailedRecord:
		return true
	}
	return false
}

func (e RecordedType) String() string {
	return string(e)
}

func (e *RecordedType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = RecordedType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid RecordedType", str)
	}
	return nil
}

func (e RecordedType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type UserType string

const (
	UserTypeMember    UserType = "MEMBER"
	UserTypeApprover  UserType = "APPROVER"
	UserTypeAdminzeus UserType = "ADMINZEUS"
	UserTypeSystem    UserType = "SYSTEM"
)

var AllUserType = []UserType{
	UserTypeMember,
	UserTypeApprover,
	UserTypeAdminzeus,
	UserTypeSystem,
}

func (e UserType) IsValid() bool {
	switch e {
	case UserTypeMember, UserTypeApprover, UserTypeAdminzeus, UserTypeSystem:
		return true
	}
	return false
}

func (e UserType) String() string {
	return string(e)
}

func (e *UserType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = UserType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid UserType", str)
	}
	return nil
}

func (e UserType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
